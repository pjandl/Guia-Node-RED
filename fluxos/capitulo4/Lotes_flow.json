[
    {
        "id": "022351a3b513f171",
        "type": "tab",
        "label": "Lotes",
        "disabled": false,
        "info": "Demonstração das capacidades do nó \r\nbatch em seus três modos de operação.\r\n - Agrupar por número de mensagens;\r\n - Agrupar por intervalo de tempo; e\r\n - Concatenar sequências.\r\n\r\nUsa os nós inject, function, batch, \r\njoin e debug.",
        "env": []
    },
    {
        "id": "175d590ba4149b41",
        "type": "inject",
        "z": "022351a3b513f171",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "b851395b13daaec2"
            ]
        ]
    },
    {
        "id": "b851395b13daaec2",
        "type": "function",
        "z": "022351a3b513f171",
        "name": "Variador",
        "func": "let espera = context.get(\"espera\");\nespera--; \nif (espera > 0) {\n    context.set(\"espera\", espera);\n    return null;\n}\nespera = Math.ceil(Math.random() * 10);\ncontext.set(\"espera\", espera);\nmsg.payload = espera;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\ncontext.set(\"espera\", 0);",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "abfe98b3483bc3c4",
                "d85bfec4058e1b7a"
            ]
        ]
    },
    {
        "id": "abfe98b3483bc3c4",
        "type": "debug",
        "z": "022351a3b513f171",
        "name": "Espera",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 540,
        "y": 80,
        "wires": []
    },
    {
        "id": "d85bfec4058e1b7a",
        "type": "batch",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "count",
        "count": "3",
        "overlap": 0,
        "interval": "15",
        "allowEmptySequence": false,
        "topics": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "5bcfad5bf0c3ead7"
            ]
        ]
    },
    {
        "id": "9c971f46a676b5c4",
        "type": "debug",
        "z": "022351a3b513f171",
        "name": "Lote",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "5bcfad5bf0c3ead7",
        "type": "join",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "9c971f46a676b5c4"
            ]
        ]
    },
    {
        "id": "e703a7f03992b0fd",
        "type": "inject",
        "z": "022351a3b513f171",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "a138284b6b8e5822"
            ]
        ]
    },
    {
        "id": "a138284b6b8e5822",
        "type": "function",
        "z": "022351a3b513f171",
        "name": "Variador",
        "func": "let espera = context.get(\"espera\");\nespera--; \nif (espera > 0) {\n    context.set(\"espera\", espera);\n    return null;\n}\nespera = Math.ceil(Math.random() * 10);\ncontext.set(\"espera\", espera);\nmsg.payload = espera;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\ncontext.set(\"espera\", 0);",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 260,
        "wires": [
            [
                "d4ccb5c9d680ef87",
                "75f6e32286fef785"
            ]
        ]
    },
    {
        "id": "d4ccb5c9d680ef87",
        "type": "debug",
        "z": "022351a3b513f171",
        "name": "Espera",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 540,
        "y": 260,
        "wires": []
    },
    {
        "id": "75f6e32286fef785",
        "type": "batch",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "interval",
        "count": "3",
        "overlap": 0,
        "interval": "15",
        "allowEmptySequence": false,
        "topics": [],
        "x": 180,
        "y": 320,
        "wires": [
            [
                "195e2291e9a970c7"
            ]
        ]
    },
    {
        "id": "3eb18513d55ca11b",
        "type": "debug",
        "z": "022351a3b513f171",
        "name": "Lote",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 320,
        "wires": []
    },
    {
        "id": "195e2291e9a970c7",
        "type": "join",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "3eb18513d55ca11b"
            ]
        ]
    },
    {
        "id": "e30abaa905978537",
        "type": "comment",
        "z": "022351a3b513f171",
        "name": "Agrupar por número de mensagens",
        "info": "Neste fluxo, o nó inject 'Timer', funciona \ncomo um temporizador, enviando um \ntimestamp a cada 1 segundo.\n\nO nó function 'Variador' envia mensagens \napós um tempo de espera aleatório entre \n[1, 10] segundos. As mensagens recebidas \ndo nó inject são usadas para controle do \ntempo.\n\nCada vez que a espera se torna zero, uma \nmensagem é enviada com o tempo de espera \npara o envio da próxima mensagem. Um nó \ndebug permite observar as mensagens \nindividuais.\n\nO nó batch retém as mensagens recebidas \nde function até que formem um lote de 3 \nmensagens, quando são enviadas.\n\nO nó join agrupa as mensagens de cada \nlote, facilitando sua visualização com \no segundo nó debug.",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "6c98627efb272b8b",
        "type": "comment",
        "z": "022351a3b513f171",
        "name": "Agrupar por intervalo de tempo",
        "info": "Neste fluxo, o nó inject 'Timer', funciona \ncomo um temporizador, enviando um \ntimestamp a cada 1 segundo.\n\nO nó function 'Variador' envia mensagens \napós um tempo de espera aleatório entre \n[1, 10] segundos. As mensagens recebidas \ndo nó inject são usadas para controle do \ntempo.\n\nCada vez que a espera se torna zero, uma \nmensagem é enviada com o tempo de espera \npara o envio da próxima mensagem. Um nó \ndebug permite observar as mensagens \nindividuais.\n\nO nó batch retém as mensagens recebidas \nde function em um intervalo específico de \ntempo (15 segundos), formando um lote de\ntamanho variável, quando são enviadas.\n\nO nó join agrupa as mensagens de cada \nlote, facilitando sua visualização com \no segundo nó debug.",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "69244e3f36f368d4",
        "type": "comment",
        "z": "022351a3b513f171",
        "name": "Concatenar sequência",
        "info": "Neste fluxo, o acionamento manual do \nnó inject envia uma lista de letras \ncomo mensagem, incluindo a propriedade \nmsg.topic com valor 'Mixed'.\n\nO nó split divide a mensagem em seus \ncomponentes individuais (as letras), de \nmodo que o nó switch as separe em duas \nrotas distintas: consoantes e vogais.\n\nO nó change de cada rota altera a \npropriedade msg.topic para 'Vogal' ou \n'Consoante' conforme a rota, de modo que\nas duas rotas são concentradas no nó \nbatch que as concatena numa sequência\nde vogais sucedida numa sequência de \nconsoantes, alterando a sequência original\ndas mensagens.\n\nO nó join reagrupa as mensagens, exibidas\nnovamente como uma lista de caracteres\npelo nó debug.",
        "x": 620,
        "y": 420,
        "wires": []
    },
    {
        "id": "0d535e283713967b",
        "type": "join",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 580,
        "wires": [
            [
                "211281c93e3c9537"
            ]
        ]
    },
    {
        "id": "64cea7ad6cb1e280",
        "type": "batch",
        "z": "022351a3b513f171",
        "name": "",
        "mode": "concat",
        "count": 10,
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [
            {
                "topic": "Vogal"
            },
            {
                "topic": "Consoante"
            }
        ],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "0d535e283713967b"
            ]
        ]
    },
    {
        "id": "211281c93e3c9537",
        "type": "debug",
        "z": "022351a3b513f171",
        "name": "Saída",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "f831945b68a3d0c9",
        "type": "change",
        "z": "022351a3b513f171",
        "name": "Vogal",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Vogal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 580,
        "wires": [
            [
                "64cea7ad6cb1e280"
            ]
        ]
    },
    {
        "id": "d6f54cdd7d2a5bf6",
        "type": "switch",
        "z": "022351a3b513f171",
        "name": "Vogal ou \\n Consoante",
        "property": "$contains(\"AEIOU\", payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 2,
        "x": 130,
        "y": 540,
        "wires": [
            [
                "34375dc5789b3b61"
            ],
            [
                "f831945b68a3d0c9"
            ]
        ]
    },
    {
        "id": "92857b631898c89d",
        "type": "split",
        "z": "022351a3b513f171",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "d6f54cdd7d2a5bf6"
            ]
        ]
    },
    {
        "id": "2355f80508d82f32",
        "type": "inject",
        "z": "022351a3b513f171",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Mixed",
        "payload": "Q,W,E,R,T,Y,O",
        "payloadType": "str",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "92857b631898c89d"
            ]
        ]
    },
    {
        "id": "34375dc5789b3b61",
        "type": "change",
        "z": "022351a3b513f171",
        "name": "Consoante",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Consoante",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 520,
        "wires": [
            [
                "64cea7ad6cb1e280"
            ]
        ]
    },
    {
        "id": "89e5b0c22317a6c7",
        "type": "inject",
        "z": "022351a3b513f171",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Mixed",
        "payload": "A,S,D,P,M,H,I,G,N,R,U",
        "payloadType": "str",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "92857b631898c89d"
            ]
        ]
    }
]