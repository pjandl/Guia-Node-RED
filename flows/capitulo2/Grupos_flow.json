[
    {
        "id": "387e489f64eaca06",
        "type": "tab",
        "label": "Grupos",
        "disabled": false,
        "info": "Este fluxo exemplifica o agrupamento \r\nde nós. Ele contém:\r\n\r\n - um nó inject, que envia valores inteiros\r\naleatórios entre 0 e 100;\r\n - um nó switch, que avalia a paridade do\r\n payload recebido, separando valores pares\r\n e ímpares, direcionados para saídas distintas;\r\n - nós function, que calculam as médias\r\n dos valores recebidos colocando-as na\r\n propriedade msg.media;\r\n - nós debug, que exibem as médias \r\n calculadas pelo nós function.\r\n\r\n Na construção deste fluxo, foram agrupados\r\n os nós function e debug, facilitando sua\r\ndisposição e configuração específicas.\r\n",
        "env": []
    },
    {
        "id": "1a453e2ea9f6c578",
        "type": "group",
        "z": "387e489f64eaca06",
        "name": "Média Par",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "dd5b6dfd0b429ded",
            "5b9c3fddeaacabfb"
        ],
        "x": 374,
        "y": 39,
        "w": 332,
        "h": 82
    },
    {
        "id": "6a10f94387d731c3",
        "type": "group",
        "z": "387e489f64eaca06",
        "name": "Média Ímpar",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "0fc5001e581aebce",
            "fb314c4f1b025ab2"
        ],
        "x": 374,
        "y": 139,
        "w": 332,
        "h": 82
    },
    {
        "id": "e4b8f712b2ace753",
        "type": "inject",
        "z": "387e489f64eaca06",
        "name": "[0,100]",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$floor(101 * $random())",
        "payloadType": "jsonata",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "10df4e3dc9d787d4"
            ]
        ]
    },
    {
        "id": "dd5b6dfd0b429ded",
        "type": "debug",
        "z": "387e489f64eaca06",
        "g": "1a453e2ea9f6c578",
        "name": "Média",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "media",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "10df4e3dc9d787d4",
        "type": "switch",
        "z": "387e489f64eaca06",
        "name": "Paridade",
        "property": "payload % 2",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "5b9c3fddeaacabfb"
            ],
            [
                "fb314c4f1b025ab2"
            ]
        ]
    },
    {
        "id": "5b9c3fddeaacabfb",
        "type": "function",
        "z": "387e489f64eaca06",
        "g": "1a453e2ea9f6c578",
        "name": "Média",
        "func": "let soma = context.get(\"soma\") + msg.payload;\ncontext.set(\"soma\", soma);\nlet cont = context.get(\"cont\") + 1;\ncontext.set(\"cont\", cont);\nmsg.media = soma / cont;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\ncontext.set(\"soma\", 0);\ncontext.set(\"cont\", 0);",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 80,
        "wires": [
            [
                "dd5b6dfd0b429ded"
            ]
        ]
    },
    {
        "id": "0fc5001e581aebce",
        "type": "debug",
        "z": "387e489f64eaca06",
        "g": "6a10f94387d731c3",
        "name": "Média",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "media",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "fb314c4f1b025ab2",
        "type": "function",
        "z": "387e489f64eaca06",
        "g": "6a10f94387d731c3",
        "name": "Média",
        "func": "let soma = context.get(\"soma\") + msg.payload;\ncontext.set(\"soma\", soma);\nlet cont = context.get(\"cont\") + 1;\ncontext.set(\"cont\", cont);\nmsg.media = soma / cont;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\ncontext.set(\"soma\", 0);\ncontext.set(\"cont\", 0);",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "0fc5001e581aebce"
            ]
        ]
    }
]